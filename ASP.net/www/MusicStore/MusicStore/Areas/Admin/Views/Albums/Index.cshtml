@model MusicStore.Models.ViewModels.ListAlbumsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<h4>Filter op:</h4>
<form asp-controller="Albums" asp-action="Index" method="get">
    <!-- genreID corresponds to the property of the corresponding ViewModel (ListMoviesViewModel) -->
    <label asp-for="genreID"><b>Genre</b></label>
        <select asp-for="genreID" asp-items="Model.Genres">
            <option value="0">-- Select a genre --</option>
        </select>
    <br />
    <label asp-for="artistID"><b>Artist</b></label>
        <select asp-for="artistID" asp-items="Model.Artists">
            <option value="0">-- Select a artist --</option>
        </select>
    <br />
    <label asp-for="Title">
        <b>Title</b>
    </label>
    <input asp-for="Title" value=" "/>  
    <input type="submit" value="Filter" />
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Artists)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Albums) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Artist.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
